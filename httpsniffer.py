#!/usr/bin/python3

import argparse
from scapy.all import *
import concurrent.futures
from colorama import init, Fore
from scapy.layers.http import HTTPRequest
from scapy.layers.tls.session import TLSSession

def sniff_packets(iface: str = None):
	if iface:
		sniff(filter='port 80', prn=process_packet, iface=iface, store=False)
	else:
		sniff(filter='port 80', prn=process_packet, store=False, session=TLSSession)

def process_packet(packet):
	GREEN = Fore.GREEN
	WHITE = Fore.WHITE

	if packet.haslayer(HTTPRequest):
		url = packet[HTTPRequest].Host.decode() + packet[HTTPRequest].Path.decode()
		ip = packet[IP].src
		method = packet[HTTPRequest].Method.decode()
		print(f'{GREEN} [+] {ip} REQUESTED {url} WITH {method} {WHITE}')
		if packet.haslayer(Raw) and method == "POST":
			print(f'{WHITE}[*] RAW DATA: {packet[Raw].load}')

def main():
	init()

	sniff_packets()

if __name__ == '__main__':
	main()