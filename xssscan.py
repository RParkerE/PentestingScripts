#!/usr/bin/python3

import bs4
import argparse
import requests
from pprint import pprint
from urllib.parse import urljoin
from bs4 import BeautifulSoup as bs

def scan_xss(url: str) -> bool:
	forms = get_forms(url)
	print(f"[+] Detected {len(forms)} forms on {url}")

	js_script = "<script>alert('hi')</script>"
	is_vulnerable = False

	for form in forms:
		form_details = get_form_details(form)
		content = submit_form(form_details, url, js_script).content.decode()
		if js_script in content:
			print(f"[+] XSS Detected on {url}")
			print(f"[*] Form Details: ")
			pprint(form_details)
			is_vulnerable = True

	return is_vulnerable

def submit_form(form_details: list, url: str, value: str) -> requests.models.Response:
	target_url = urljoin(url, form_details["action"])

	inputs = form_details["inputs"]
	data = {}
	for input in inputs:
		if input["type"] == "text" or input["type"] == "search":
			input["value"] = value
		
		input_name = input.get("name")
		input_value = input.get("value")

		if input_name and input_value:
			data[input_name] = input_value

	if form_details["method"] == "post":
		return requests.post(target_url, data=data)
	else:
		return requests.get(target_url, params=data)

def get_form_details(form: bs4.element.Tag) -> dict:
	details = {}
	action = form.attrs.get("action").lower()
	method = form.attrs.get("method", "get").lower()
	
	inputs = []
	for input_tag in form.find_all("input"):
		input_type = input_tag.attrs.get("type", "text")
		input_name = input_tag.attrs.get("name")
		inputs.append({"type": input_type, "name": input_name})

	details["action"] = action
	details["method"] = method
	details["inputs"] = inputs

	return details

def get_forms(url: str) -> bs4.element.ResultSet:
	soup = bs(requests.get(url).content, 'html.parser')
	
	return soup.find_all('form')

def main():
	parser = argparse.ArgumentParser(usage='Usage of scanner: --H <target host>')
	parser.add_argument('--H', dest='url', type=str, help='specify target host')
	args = parser.parse_args()
	url = args.url
	scan_xss(url)

if __name__ == '__main__':
	main()